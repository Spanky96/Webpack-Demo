<html lang="zh">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <!-- //不缓存 -->
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="Cache-Control" content="no-cache, must-revalidate">
    <meta http-equiv="expires" content="0">
    <title>三维通用地图</title>
    <script src="./static/js/lib/jquery-3.2.1.js"></script>
    <script src="./static/js/lib/color.js"></script>
    <script src="./static/js/lib/coordtransform.js"></script>
    <script src="./static/js/lib/lwmap.js"></script>
    <script src="./config.js"></script>
    <script type="text/javascript" src="./static/js/tianditu.js"></script>
    <link rel="stylesheet" href="./static/css/style.css">
</head>

<body>
    <div id="content">
        <div class="local-zb" style="z-index:2;"><ul></ul></div>
        <div id="map" style="width: 100%;height: 100%;z-index: 1;"></div>
    </div>
    <script>
        var boundaryData = '';
        var currentGirdNo = '';
        var wgTree = [];
        function getQueryString(name) {
            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
            var r = window.location.search.substr(1).match(reg);
            if (r != null) return decodeURI(r[2]);
            return null;
        }
        // 清除网格 一级 二级 三级
        function clearFeatures(f1 = 1, f2 = 1, f3 = 1) {
            if (f1) {
                map.removeFeature('FeatureCollection');
            }
            if (f2) {
                map.removeFeature('Feature');
            }
            if (f3) {
                map.removeFeature('Terminal');
            }
        }

        function updateWgTree() {
            $('.local-zb ul').html('');
            wgTree.forEach((tree, index) => {
                var dom = $(`<li attr-index="${index}">${tree.name}</li>`);
                $('.local-zb ul').append(dom);
            });
        }
        (function () {
            $('.local-zb').click('li', function () {
                var index = parseInt($(event.target).attr('attr-index'));
                if (index != wgTree.length - 1) {
                    var clickItem = wgTree[index];
                    clearFeatures();
                    wgTree = wgTree.slice(0, index + 1);
                    updateWgTree();
                    if (index == 0) {
                        addFeatureV1();
                        map.setCenterAndZoom($Config.CENTER, $Config.ZOOM);
                        showGridDetail();
                    }
                    if (index == 1) {
                        var grid = boundaryData.features.find(feature => feature.id == clickItem.id);
                        grid.features.forEach(fl2 => {addFeatureV2(fl2);});
                        map.setCenterAndZoom(clickItem.cp, $Config.ZOOM_2); 
                        showGridDetail();
                    }

                }
            });
        })();
        function addFeatureV1() {
            boundaryData.features.forEach(feature => {
                map.add3DBoundaryByFeatureV2(feature, '#0d2e56', 0.58, 2500, [3, 20],
                    function () {
                        // 网格块的点击事件
                        map.setCenterAndZoom(feature.properties.cp, $Config.ZOOM_2);
                        clearFeatures();
                        // // 更新面包线
                        wgTree = wgTree.slice(0, 1);
                        wgTree.push({
                            name: feature.properties.name,
                            type: 'Feature',
                            id: feature.id,
                            cp: feature.properties.cp
                        });
                        updateWgTree();
                        currentGirdNo = feature.id;
                        if (feature.features.length) {
                            feature.features.forEach(addFeatureV2);
                            showGridDetail();
                        } else {
                            map.add3DBoundaryByFeatureV2(feature, '#1ac9ff', 0.3, 1600,
                                [3, 20], () => {
                                    showGridDetail();
                                }, 'Terminal');
                        }
                    }, 'FeatureCollection');
            });
        }
        // 创建二级网格
        function addFeatureV2(fl2) {
            map.add3DBoundaryByFeatureV2(fl2, '#3831fa', 0.5, 1000, [3, 20], function () {
                currentGirdNo = fl2.id;
                if (fl2.features && fl2.features.length) {
                    clearFeatures();
                    fl2.features.forEach(addFeatureV3);
                    showGridDetail();
                } else {
                    map.setCenterAndZoom(fl2.properties.cp, $Config.ZOOM_3);
                    showGridDetail();
                }
                wgTree = wgTree.slice(0, 2);
                wgTree.push({
                    name: fl2.properties.name,
                    type: 'Terminal',
                    id: fl2.id,
                    cp: fl2.properties.cp,
                    features: fl2.features
                });
                updateWgTree();
            });
        }

        // 创建三级网格
        function addFeatureV3(fl3) {
            map.add3DBoundaryByFeatureV2(fl3, '#3831fa', 0.5, 1000, [3, 20], function () {
                map.setCenterAndZoom(fl3.properties.cp, $Config.ZOOM_3 + 1);
                // clearFeatures();
                currentGirdNo = fl3.id;
                showGridDetail();
            });
        }

        function showGridDetail() {
            console.log(wgTree[wgTree.length - 1]);
            alert('层级切换了:' + currentGirdNo + '_level:' + wgTree.length);
        }
    </script>

    <script>
        // $Config.debug = getQueryString('debug') ? true : false;
        // 初始化地图
        var map = new LwMap('map', $Config.ZOOM);
        map.loadPromise.then(() => {
            console.log('加载网格数据');
            $.getJSON('./mapJSON.json', (data) => {
                $Config.CENTER = [parseFloat(data.cp.lng), parseFloat(data.cp.lat)];
                wgTree.push({
                    name: data.gridName,
                    type: 'FeatureCollection',
                    id: data.gridNo,
                    cp: data.cp
                });
                updateWgTree();
                boundaryData = data;
                addFeatureV1();
                map.setCenterAndZoom($Config.CENTER, $Config.ZOOM, 3000);
                // 添加marker id， 图片， 中心点（传国测局坐标， 会转84） 图片大小 图片的中心点 是否显示 点击方法 额外变量
                map.addBreatheMarker('123', './static/imgs/canjiren.png',
                [120.280357105954,31.543141143743], [26, 26], [13, 26], true, function () {
                    var popoverHtml = `<div class="common-detail">哈哈哈哈</div>`;
                    map.showInfoWindow(popoverHtml, [120.280357105954,31.543141143743]);
                  },
                  { lwType: 'canjirenMarker', clz: 'canjiren' }
                );

                map.addBreatheMarker('345', './static/imgs/chuzuhu.png',
                [120.285562124508,31.543079235371], [26, 26], [13, 26], true, function () {
                    var popoverHtml = `<div class="common-detail">哈哈哈哈</div>`;
                    map.showInfoWindow(popoverHtml, [120.285562124508,31.543079235371]);
                  },
                  { lwType: 'activity', clz: 'chuzuhu' }
                );
                // 清图标
                setTimeout(() => {
                    map.clearActivities((n) => n.lwType == 'canjirenMarker'); // 清type为canjirenMarker的图标
                    // map.clearActivities(); // 清所有
                }, 5000);
            });
        });

        
    </script>

</body>

</html>